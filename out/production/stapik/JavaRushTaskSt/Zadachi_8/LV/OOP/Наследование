У наследования есть две стороны. Сторона программирования и сторона реальной жизни.
С точки зрения программирования, наследование — это специальное отношение между двумя классами.
 Но гораздо интереснее, что же такое наследование с точки зрения реальной жизни.

Если нам понадобится что-то создать в реальной жизни, у нас есть два решения:

Создать нужную нам вещь с нуля, потратив кучу времени и сил.
Создать нужную нам вещь на основе уже существующей.
Наиболее оптимальная стратегия выглядит так: берем существующее хорошее решение, немного его дорабатываем,
подгоняем под свои нужды и используем.

Если мы проследим историю возникновения человека, то окажется, что с момента зарождения жизни на планете прошли миллиарды лет.
А если представить, что человек возник из обезьяны (на основе обезьяны), то прошла всего пара миллионов лет.
Создание с нуля — дольше. Гораздо дольше.

В программировании тоже есть возможность создавать один класс на основе другого.
Новый класс становится потомком (наследником) уже существующего.
Это очень выгодно, когда есть класс, который содержит 80%-90% нужных нам данных и методов.
Мы просто объявляем подходящий класс родителем нашего нового класса,
и в новом классе автоматически появляются все данные и методы класса-родителя.
Правда, удобно?