package JavaRushTaskSt.Zadachi_15.LV.Correct_operation_of_the_program.Exceptions;

public class Test {
    public static void main(String[] args)
    {
        System.out.println("Внимание! Подготовка к концу света");
        theEndOfTheWorld();
        System.out.println("Конец света успешно завершён");
    }

    public static void theEndOfTheWorld()//конецСвета
    {
        System.out.println("Делаем что-то важное");
        share(0);
        System.out.println("Все отлично работает");
    }

    public static void share(int n)//поделим
    {
        System.out.println("Ничего страшного не произойдет: " + n);
        System.out.println(2 / n);
        System.out.println("Ничего страшного не произошло: " + n);
    }
}
/*
В 21-й строке возникла ошибка — деление на 0.
Java-машина тут же создала исключение — объект класса ArithmeticException и «выбросила» его в систему.

Метод поделим() сразу завершился, поэтому на экран не вывелась строка Ничего страшного не произошло: 0.
Программа вернулась в метод конецСвета(), и ситуация повторилась: в системе есть исключение, а значит,
метод конецСвета() тоже аварийно завершается. Затем завершается метод main, и выполнение программы прекращается.

А в чем же смысл работы таких исключений?
А в том, что в вашей программе можно перехватывать исключения определенного типа
и писать свою логику обработки аварийных ситуаций.
* */